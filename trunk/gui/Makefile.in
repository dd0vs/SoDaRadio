# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
bin_PROGRAMS = SoDaRadio$(EXEEXT)
subdir = gui
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/adjust_GUI.sh.in $(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_asio.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_date_time.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_serialization.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_fftw3.m4 $(top_srcdir)/m4/ax_fftw3f.m4 \
	$(top_srcdir)/m4/ax_prog_doxygen.m4 $(top_srcdir)/m4/ax_uhd.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = adjust_GUI.sh
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_SoDaRadio_OBJECTS = SoDaRadio-SoDaRadio_App.$(OBJEXT) \
	SoDaRadio-SoDaRadio_GUI.$(OBJEXT) \
	SoDaRadio-SoDaRadio_Top.$(OBJEXT) \
	SoDaRadio-SoDaRadio_Top_Events.$(OBJEXT) \
	SoDaRadio-SoDaRadio_Top_Config.$(OBJEXT) \
	../src/SoDaRadio-UDSockets.$(OBJEXT) \
	../src/SoDaRadio-Command.$(OBJEXT) \
	SoDaRadio-Navigation.$(OBJEXT) SoDaRadio-dem-gridlib.$(OBJEXT) \
	SoDaRadio-xyplot.$(OBJEXT) \
	SoDaRadio-RadioListenerThread.$(OBJEXT) \
	SoDaRadio-GuiParams.$(OBJEXT) SoDaRadio-waterfall.$(OBJEXT) \
	SoDaRadio-FindHome.$(OBJEXT) ../src/SoDaRadio-Debug.$(OBJEXT)
SoDaRadio_OBJECTS = $(am_SoDaRadio_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
SoDaRadio_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
SoDaRadio_LINK = $(CXXLD) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) \
	$(SoDaRadio_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(SoDaRadio_SOURCES)
DIST_SOURCES = $(SoDaRadio_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_ASIO_LIB = @BOOST_ASIO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN_PAPER_SIZE = @DOXYGEN_PAPER_SIZE@
DX_CONFIG = @DX_CONFIG@
DX_DOCDIR = @DX_DOCDIR@
DX_DOT = @DX_DOT@
DX_DOXYGEN = @DX_DOXYGEN@
DX_DVIPS = @DX_DVIPS@
DX_EGREP = @DX_EGREP@
DX_ENV = @DX_ENV@
DX_FLAG_chi = @DX_FLAG_chi@
DX_FLAG_chm = @DX_FLAG_chm@
DX_FLAG_doc = @DX_FLAG_doc@
DX_FLAG_dot = @DX_FLAG_dot@
DX_FLAG_html = @DX_FLAG_html@
DX_FLAG_man = @DX_FLAG_man@
DX_FLAG_pdf = @DX_FLAG_pdf@
DX_FLAG_ps = @DX_FLAG_ps@
DX_FLAG_rtf = @DX_FLAG_rtf@
DX_FLAG_xml = @DX_FLAG_xml@
DX_HHC = @DX_HHC@
DX_LATEX = @DX_LATEX@
DX_MAKEINDEX = @DX_MAKEINDEX@
DX_PDFLATEX = @DX_PDFLATEX@
DX_PERL = @DX_PERL@
DX_PROJECT = @DX_PROJECT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WX_CFLAGS = @WX_CFLAGS_ONLY@
WX_CFLAGS_ONLY = @WX_CFLAGS_ONLY@
WX_CONFIG_PATH = @WX_CONFIG_PATH@
WX_CPPFLAGS = @WX_CPPFLAGS@
WX_CXXFLAGS = @WX_CXXFLAGS_ONLY@
WX_CXXFLAGS_ONLY = @WX_CXXFLAGS_ONLY@
WX_LIBS = @WX_LIBS@
WX_LIBS_STATIC = @WX_LIBS_STATIC@
WX_RESCOMP = @WX_RESCOMP@
WX_VERSION = @WX_VERSION@
WX_VERSION_MAJOR = @WX_VERSION_MAJOR@
WX_VERSION_MICRO = @WX_VERSION_MICRO@
WX_VERSION_MINOR = @WX_VERSION_MINOR@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
svnversioncommand = @svnversioncommand@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
AM_CPPFLAGS = -I$(top_srcdir)/include
AM_BOOSTLIBFLAGS = ${BOOST_PROGRAM_OPTIONS_LIB} ${BOOST_THREAD_LIB} ${BOOST_DATE_TIME_LIB} ${BOOST_SYSTEM_LIB}
EXTRA_DIST = SoDaRadio_GUI.cpp uparrow.xpm downarrow.xpm SoDaLogo.xpm SoDaLogo_Big.xpm adjust_GUI.sh SoDaLogo_Big.png 
SoDaRadio_SOURCES = SoDaRadio_App.cxx SoDaRadio_GUI.cxx  SoDaRadio_Top.cxx SoDaRadio_Top_Events.cxx SoDaRadio_Top_Config.cxx ../src/UDSockets.cxx ../src/Command.cxx Navigation.cxx dem-gridlib.c xyplot.cxx RadioListenerThread.cxx GuiParams.cxx waterfall.cxx dem-gridlib.h GuiParams.hxx Navigation.hxx RadioListenerThread.hxx SoDaRadio_App.hxx SoDaRadio_GUI.h SoDaRadio_Top.h TunerDigit.hxx waterfall.hxx xyplot.hxx FindHome.hxx FindHome.cxx Default.soda_cfg.h SoDaRadio_Band.hxx ../src/Debug.hxx ../src/Debug.cxx
SoDaRadio_CPPFLAGS = $(AM_CPPFLAGS) $(WX_CPPFLAGS) 
SoDaRadio_LDADD = $(AM_BOOSTLIBFLAGS) $(WX_LIBS)
SoDaRadio_CXXFLAGS = $(WX_CXXFLAGS) 
SoDaRadio_CFLAGS = -g
SoDaRadio_LDFLAGS = $(WX_LIBS) -lm -lrt
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cxx .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gui/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gui/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
adjust_GUI.sh: $(top_builddir)/config.status $(srcdir)/adjust_GUI.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
../src/$(am__dirstamp):
	@$(MKDIR_P) ../src
	@: > ../src/$(am__dirstamp)
../src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../src/$(DEPDIR)
	@: > ../src/$(DEPDIR)/$(am__dirstamp)
../src/SoDaRadio-UDSockets.$(OBJEXT): ../src/$(am__dirstamp) \
	../src/$(DEPDIR)/$(am__dirstamp)
../src/SoDaRadio-Command.$(OBJEXT): ../src/$(am__dirstamp) \
	../src/$(DEPDIR)/$(am__dirstamp)
../src/SoDaRadio-Debug.$(OBJEXT): ../src/$(am__dirstamp) \
	../src/$(DEPDIR)/$(am__dirstamp)

SoDaRadio$(EXEEXT): $(SoDaRadio_OBJECTS) $(SoDaRadio_DEPENDENCIES) $(EXTRA_SoDaRadio_DEPENDENCIES) 
	@rm -f SoDaRadio$(EXEEXT)
	$(AM_V_CXXLD)$(SoDaRadio_LINK) $(SoDaRadio_OBJECTS) $(SoDaRadio_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@../src/$(DEPDIR)/SoDaRadio-Command.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@../src/$(DEPDIR)/SoDaRadio-Debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@../src/$(DEPDIR)/SoDaRadio-UDSockets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-FindHome.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-GuiParams.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-Navigation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-RadioListenerThread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-SoDaRadio_App.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-SoDaRadio_GUI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-SoDaRadio_Top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-SoDaRadio_Top_Config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-SoDaRadio_Top_Events.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-dem-gridlib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-waterfall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoDaRadio-xyplot.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

SoDaRadio-dem-gridlib.o: dem-gridlib.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CFLAGS) $(CFLAGS) -MT SoDaRadio-dem-gridlib.o -MD -MP -MF $(DEPDIR)/SoDaRadio-dem-gridlib.Tpo -c -o SoDaRadio-dem-gridlib.o `test -f 'dem-gridlib.c' || echo '$(srcdir)/'`dem-gridlib.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-dem-gridlib.Tpo $(DEPDIR)/SoDaRadio-dem-gridlib.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dem-gridlib.c' object='SoDaRadio-dem-gridlib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CFLAGS) $(CFLAGS) -c -o SoDaRadio-dem-gridlib.o `test -f 'dem-gridlib.c' || echo '$(srcdir)/'`dem-gridlib.c

SoDaRadio-dem-gridlib.obj: dem-gridlib.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CFLAGS) $(CFLAGS) -MT SoDaRadio-dem-gridlib.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-dem-gridlib.Tpo -c -o SoDaRadio-dem-gridlib.obj `if test -f 'dem-gridlib.c'; then $(CYGPATH_W) 'dem-gridlib.c'; else $(CYGPATH_W) '$(srcdir)/dem-gridlib.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-dem-gridlib.Tpo $(DEPDIR)/SoDaRadio-dem-gridlib.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dem-gridlib.c' object='SoDaRadio-dem-gridlib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CFLAGS) $(CFLAGS) -c -o SoDaRadio-dem-gridlib.obj `if test -f 'dem-gridlib.c'; then $(CYGPATH_W) 'dem-gridlib.c'; else $(CYGPATH_W) '$(srcdir)/dem-gridlib.c'; fi`

.cxx.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

SoDaRadio-SoDaRadio_App.o: SoDaRadio_App.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_App.o -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_App.Tpo -c -o SoDaRadio-SoDaRadio_App.o `test -f 'SoDaRadio_App.cxx' || echo '$(srcdir)/'`SoDaRadio_App.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_App.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_App.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_App.cxx' object='SoDaRadio-SoDaRadio_App.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_App.o `test -f 'SoDaRadio_App.cxx' || echo '$(srcdir)/'`SoDaRadio_App.cxx

SoDaRadio-SoDaRadio_App.obj: SoDaRadio_App.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_App.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_App.Tpo -c -o SoDaRadio-SoDaRadio_App.obj `if test -f 'SoDaRadio_App.cxx'; then $(CYGPATH_W) 'SoDaRadio_App.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_App.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_App.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_App.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_App.cxx' object='SoDaRadio-SoDaRadio_App.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_App.obj `if test -f 'SoDaRadio_App.cxx'; then $(CYGPATH_W) 'SoDaRadio_App.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_App.cxx'; fi`

SoDaRadio-SoDaRadio_GUI.o: SoDaRadio_GUI.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_GUI.o -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_GUI.Tpo -c -o SoDaRadio-SoDaRadio_GUI.o `test -f 'SoDaRadio_GUI.cxx' || echo '$(srcdir)/'`SoDaRadio_GUI.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_GUI.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_GUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_GUI.cxx' object='SoDaRadio-SoDaRadio_GUI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_GUI.o `test -f 'SoDaRadio_GUI.cxx' || echo '$(srcdir)/'`SoDaRadio_GUI.cxx

SoDaRadio-SoDaRadio_GUI.obj: SoDaRadio_GUI.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_GUI.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_GUI.Tpo -c -o SoDaRadio-SoDaRadio_GUI.obj `if test -f 'SoDaRadio_GUI.cxx'; then $(CYGPATH_W) 'SoDaRadio_GUI.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_GUI.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_GUI.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_GUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_GUI.cxx' object='SoDaRadio-SoDaRadio_GUI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_GUI.obj `if test -f 'SoDaRadio_GUI.cxx'; then $(CYGPATH_W) 'SoDaRadio_GUI.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_GUI.cxx'; fi`

SoDaRadio-SoDaRadio_Top.o: SoDaRadio_Top.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_Top.o -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_Top.Tpo -c -o SoDaRadio-SoDaRadio_Top.o `test -f 'SoDaRadio_Top.cxx' || echo '$(srcdir)/'`SoDaRadio_Top.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_Top.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_Top.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_Top.cxx' object='SoDaRadio-SoDaRadio_Top.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_Top.o `test -f 'SoDaRadio_Top.cxx' || echo '$(srcdir)/'`SoDaRadio_Top.cxx

SoDaRadio-SoDaRadio_Top.obj: SoDaRadio_Top.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_Top.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_Top.Tpo -c -o SoDaRadio-SoDaRadio_Top.obj `if test -f 'SoDaRadio_Top.cxx'; then $(CYGPATH_W) 'SoDaRadio_Top.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_Top.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_Top.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_Top.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_Top.cxx' object='SoDaRadio-SoDaRadio_Top.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_Top.obj `if test -f 'SoDaRadio_Top.cxx'; then $(CYGPATH_W) 'SoDaRadio_Top.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_Top.cxx'; fi`

SoDaRadio-SoDaRadio_Top_Events.o: SoDaRadio_Top_Events.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_Top_Events.o -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Events.Tpo -c -o SoDaRadio-SoDaRadio_Top_Events.o `test -f 'SoDaRadio_Top_Events.cxx' || echo '$(srcdir)/'`SoDaRadio_Top_Events.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Events.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_Top_Events.cxx' object='SoDaRadio-SoDaRadio_Top_Events.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_Top_Events.o `test -f 'SoDaRadio_Top_Events.cxx' || echo '$(srcdir)/'`SoDaRadio_Top_Events.cxx

SoDaRadio-SoDaRadio_Top_Events.obj: SoDaRadio_Top_Events.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_Top_Events.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Events.Tpo -c -o SoDaRadio-SoDaRadio_Top_Events.obj `if test -f 'SoDaRadio_Top_Events.cxx'; then $(CYGPATH_W) 'SoDaRadio_Top_Events.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_Top_Events.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Events.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_Top_Events.cxx' object='SoDaRadio-SoDaRadio_Top_Events.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_Top_Events.obj `if test -f 'SoDaRadio_Top_Events.cxx'; then $(CYGPATH_W) 'SoDaRadio_Top_Events.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_Top_Events.cxx'; fi`

SoDaRadio-SoDaRadio_Top_Config.o: SoDaRadio_Top_Config.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_Top_Config.o -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Config.Tpo -c -o SoDaRadio-SoDaRadio_Top_Config.o `test -f 'SoDaRadio_Top_Config.cxx' || echo '$(srcdir)/'`SoDaRadio_Top_Config.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Config.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Config.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_Top_Config.cxx' object='SoDaRadio-SoDaRadio_Top_Config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_Top_Config.o `test -f 'SoDaRadio_Top_Config.cxx' || echo '$(srcdir)/'`SoDaRadio_Top_Config.cxx

SoDaRadio-SoDaRadio_Top_Config.obj: SoDaRadio_Top_Config.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-SoDaRadio_Top_Config.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Config.Tpo -c -o SoDaRadio-SoDaRadio_Top_Config.obj `if test -f 'SoDaRadio_Top_Config.cxx'; then $(CYGPATH_W) 'SoDaRadio_Top_Config.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_Top_Config.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Config.Tpo $(DEPDIR)/SoDaRadio-SoDaRadio_Top_Config.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoDaRadio_Top_Config.cxx' object='SoDaRadio-SoDaRadio_Top_Config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-SoDaRadio_Top_Config.obj `if test -f 'SoDaRadio_Top_Config.cxx'; then $(CYGPATH_W) 'SoDaRadio_Top_Config.cxx'; else $(CYGPATH_W) '$(srcdir)/SoDaRadio_Top_Config.cxx'; fi`

../src/SoDaRadio-UDSockets.o: ../src/UDSockets.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT ../src/SoDaRadio-UDSockets.o -MD -MP -MF ../src/$(DEPDIR)/SoDaRadio-UDSockets.Tpo -c -o ../src/SoDaRadio-UDSockets.o `test -f '../src/UDSockets.cxx' || echo '$(srcdir)/'`../src/UDSockets.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ../src/$(DEPDIR)/SoDaRadio-UDSockets.Tpo ../src/$(DEPDIR)/SoDaRadio-UDSockets.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='../src/UDSockets.cxx' object='../src/SoDaRadio-UDSockets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o ../src/SoDaRadio-UDSockets.o `test -f '../src/UDSockets.cxx' || echo '$(srcdir)/'`../src/UDSockets.cxx

../src/SoDaRadio-UDSockets.obj: ../src/UDSockets.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT ../src/SoDaRadio-UDSockets.obj -MD -MP -MF ../src/$(DEPDIR)/SoDaRadio-UDSockets.Tpo -c -o ../src/SoDaRadio-UDSockets.obj `if test -f '../src/UDSockets.cxx'; then $(CYGPATH_W) '../src/UDSockets.cxx'; else $(CYGPATH_W) '$(srcdir)/../src/UDSockets.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ../src/$(DEPDIR)/SoDaRadio-UDSockets.Tpo ../src/$(DEPDIR)/SoDaRadio-UDSockets.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='../src/UDSockets.cxx' object='../src/SoDaRadio-UDSockets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o ../src/SoDaRadio-UDSockets.obj `if test -f '../src/UDSockets.cxx'; then $(CYGPATH_W) '../src/UDSockets.cxx'; else $(CYGPATH_W) '$(srcdir)/../src/UDSockets.cxx'; fi`

../src/SoDaRadio-Command.o: ../src/Command.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT ../src/SoDaRadio-Command.o -MD -MP -MF ../src/$(DEPDIR)/SoDaRadio-Command.Tpo -c -o ../src/SoDaRadio-Command.o `test -f '../src/Command.cxx' || echo '$(srcdir)/'`../src/Command.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ../src/$(DEPDIR)/SoDaRadio-Command.Tpo ../src/$(DEPDIR)/SoDaRadio-Command.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='../src/Command.cxx' object='../src/SoDaRadio-Command.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o ../src/SoDaRadio-Command.o `test -f '../src/Command.cxx' || echo '$(srcdir)/'`../src/Command.cxx

../src/SoDaRadio-Command.obj: ../src/Command.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT ../src/SoDaRadio-Command.obj -MD -MP -MF ../src/$(DEPDIR)/SoDaRadio-Command.Tpo -c -o ../src/SoDaRadio-Command.obj `if test -f '../src/Command.cxx'; then $(CYGPATH_W) '../src/Command.cxx'; else $(CYGPATH_W) '$(srcdir)/../src/Command.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ../src/$(DEPDIR)/SoDaRadio-Command.Tpo ../src/$(DEPDIR)/SoDaRadio-Command.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='../src/Command.cxx' object='../src/SoDaRadio-Command.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o ../src/SoDaRadio-Command.obj `if test -f '../src/Command.cxx'; then $(CYGPATH_W) '../src/Command.cxx'; else $(CYGPATH_W) '$(srcdir)/../src/Command.cxx'; fi`

SoDaRadio-Navigation.o: Navigation.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-Navigation.o -MD -MP -MF $(DEPDIR)/SoDaRadio-Navigation.Tpo -c -o SoDaRadio-Navigation.o `test -f 'Navigation.cxx' || echo '$(srcdir)/'`Navigation.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-Navigation.Tpo $(DEPDIR)/SoDaRadio-Navigation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Navigation.cxx' object='SoDaRadio-Navigation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-Navigation.o `test -f 'Navigation.cxx' || echo '$(srcdir)/'`Navigation.cxx

SoDaRadio-Navigation.obj: Navigation.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-Navigation.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-Navigation.Tpo -c -o SoDaRadio-Navigation.obj `if test -f 'Navigation.cxx'; then $(CYGPATH_W) 'Navigation.cxx'; else $(CYGPATH_W) '$(srcdir)/Navigation.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-Navigation.Tpo $(DEPDIR)/SoDaRadio-Navigation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Navigation.cxx' object='SoDaRadio-Navigation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-Navigation.obj `if test -f 'Navigation.cxx'; then $(CYGPATH_W) 'Navigation.cxx'; else $(CYGPATH_W) '$(srcdir)/Navigation.cxx'; fi`

SoDaRadio-xyplot.o: xyplot.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-xyplot.o -MD -MP -MF $(DEPDIR)/SoDaRadio-xyplot.Tpo -c -o SoDaRadio-xyplot.o `test -f 'xyplot.cxx' || echo '$(srcdir)/'`xyplot.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-xyplot.Tpo $(DEPDIR)/SoDaRadio-xyplot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xyplot.cxx' object='SoDaRadio-xyplot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-xyplot.o `test -f 'xyplot.cxx' || echo '$(srcdir)/'`xyplot.cxx

SoDaRadio-xyplot.obj: xyplot.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-xyplot.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-xyplot.Tpo -c -o SoDaRadio-xyplot.obj `if test -f 'xyplot.cxx'; then $(CYGPATH_W) 'xyplot.cxx'; else $(CYGPATH_W) '$(srcdir)/xyplot.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-xyplot.Tpo $(DEPDIR)/SoDaRadio-xyplot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xyplot.cxx' object='SoDaRadio-xyplot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-xyplot.obj `if test -f 'xyplot.cxx'; then $(CYGPATH_W) 'xyplot.cxx'; else $(CYGPATH_W) '$(srcdir)/xyplot.cxx'; fi`

SoDaRadio-RadioListenerThread.o: RadioListenerThread.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-RadioListenerThread.o -MD -MP -MF $(DEPDIR)/SoDaRadio-RadioListenerThread.Tpo -c -o SoDaRadio-RadioListenerThread.o `test -f 'RadioListenerThread.cxx' || echo '$(srcdir)/'`RadioListenerThread.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-RadioListenerThread.Tpo $(DEPDIR)/SoDaRadio-RadioListenerThread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RadioListenerThread.cxx' object='SoDaRadio-RadioListenerThread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-RadioListenerThread.o `test -f 'RadioListenerThread.cxx' || echo '$(srcdir)/'`RadioListenerThread.cxx

SoDaRadio-RadioListenerThread.obj: RadioListenerThread.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-RadioListenerThread.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-RadioListenerThread.Tpo -c -o SoDaRadio-RadioListenerThread.obj `if test -f 'RadioListenerThread.cxx'; then $(CYGPATH_W) 'RadioListenerThread.cxx'; else $(CYGPATH_W) '$(srcdir)/RadioListenerThread.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-RadioListenerThread.Tpo $(DEPDIR)/SoDaRadio-RadioListenerThread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RadioListenerThread.cxx' object='SoDaRadio-RadioListenerThread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-RadioListenerThread.obj `if test -f 'RadioListenerThread.cxx'; then $(CYGPATH_W) 'RadioListenerThread.cxx'; else $(CYGPATH_W) '$(srcdir)/RadioListenerThread.cxx'; fi`

SoDaRadio-GuiParams.o: GuiParams.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-GuiParams.o -MD -MP -MF $(DEPDIR)/SoDaRadio-GuiParams.Tpo -c -o SoDaRadio-GuiParams.o `test -f 'GuiParams.cxx' || echo '$(srcdir)/'`GuiParams.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-GuiParams.Tpo $(DEPDIR)/SoDaRadio-GuiParams.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GuiParams.cxx' object='SoDaRadio-GuiParams.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-GuiParams.o `test -f 'GuiParams.cxx' || echo '$(srcdir)/'`GuiParams.cxx

SoDaRadio-GuiParams.obj: GuiParams.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-GuiParams.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-GuiParams.Tpo -c -o SoDaRadio-GuiParams.obj `if test -f 'GuiParams.cxx'; then $(CYGPATH_W) 'GuiParams.cxx'; else $(CYGPATH_W) '$(srcdir)/GuiParams.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-GuiParams.Tpo $(DEPDIR)/SoDaRadio-GuiParams.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GuiParams.cxx' object='SoDaRadio-GuiParams.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-GuiParams.obj `if test -f 'GuiParams.cxx'; then $(CYGPATH_W) 'GuiParams.cxx'; else $(CYGPATH_W) '$(srcdir)/GuiParams.cxx'; fi`

SoDaRadio-waterfall.o: waterfall.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-waterfall.o -MD -MP -MF $(DEPDIR)/SoDaRadio-waterfall.Tpo -c -o SoDaRadio-waterfall.o `test -f 'waterfall.cxx' || echo '$(srcdir)/'`waterfall.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-waterfall.Tpo $(DEPDIR)/SoDaRadio-waterfall.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='waterfall.cxx' object='SoDaRadio-waterfall.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-waterfall.o `test -f 'waterfall.cxx' || echo '$(srcdir)/'`waterfall.cxx

SoDaRadio-waterfall.obj: waterfall.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-waterfall.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-waterfall.Tpo -c -o SoDaRadio-waterfall.obj `if test -f 'waterfall.cxx'; then $(CYGPATH_W) 'waterfall.cxx'; else $(CYGPATH_W) '$(srcdir)/waterfall.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-waterfall.Tpo $(DEPDIR)/SoDaRadio-waterfall.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='waterfall.cxx' object='SoDaRadio-waterfall.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-waterfall.obj `if test -f 'waterfall.cxx'; then $(CYGPATH_W) 'waterfall.cxx'; else $(CYGPATH_W) '$(srcdir)/waterfall.cxx'; fi`

SoDaRadio-FindHome.o: FindHome.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-FindHome.o -MD -MP -MF $(DEPDIR)/SoDaRadio-FindHome.Tpo -c -o SoDaRadio-FindHome.o `test -f 'FindHome.cxx' || echo '$(srcdir)/'`FindHome.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-FindHome.Tpo $(DEPDIR)/SoDaRadio-FindHome.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FindHome.cxx' object='SoDaRadio-FindHome.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-FindHome.o `test -f 'FindHome.cxx' || echo '$(srcdir)/'`FindHome.cxx

SoDaRadio-FindHome.obj: FindHome.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT SoDaRadio-FindHome.obj -MD -MP -MF $(DEPDIR)/SoDaRadio-FindHome.Tpo -c -o SoDaRadio-FindHome.obj `if test -f 'FindHome.cxx'; then $(CYGPATH_W) 'FindHome.cxx'; else $(CYGPATH_W) '$(srcdir)/FindHome.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/SoDaRadio-FindHome.Tpo $(DEPDIR)/SoDaRadio-FindHome.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FindHome.cxx' object='SoDaRadio-FindHome.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o SoDaRadio-FindHome.obj `if test -f 'FindHome.cxx'; then $(CYGPATH_W) 'FindHome.cxx'; else $(CYGPATH_W) '$(srcdir)/FindHome.cxx'; fi`

../src/SoDaRadio-Debug.o: ../src/Debug.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT ../src/SoDaRadio-Debug.o -MD -MP -MF ../src/$(DEPDIR)/SoDaRadio-Debug.Tpo -c -o ../src/SoDaRadio-Debug.o `test -f '../src/Debug.cxx' || echo '$(srcdir)/'`../src/Debug.cxx
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ../src/$(DEPDIR)/SoDaRadio-Debug.Tpo ../src/$(DEPDIR)/SoDaRadio-Debug.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='../src/Debug.cxx' object='../src/SoDaRadio-Debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o ../src/SoDaRadio-Debug.o `test -f '../src/Debug.cxx' || echo '$(srcdir)/'`../src/Debug.cxx

../src/SoDaRadio-Debug.obj: ../src/Debug.cxx
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -MT ../src/SoDaRadio-Debug.obj -MD -MP -MF ../src/$(DEPDIR)/SoDaRadio-Debug.Tpo -c -o ../src/SoDaRadio-Debug.obj `if test -f '../src/Debug.cxx'; then $(CYGPATH_W) '../src/Debug.cxx'; else $(CYGPATH_W) '$(srcdir)/../src/Debug.cxx'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ../src/$(DEPDIR)/SoDaRadio-Debug.Tpo ../src/$(DEPDIR)/SoDaRadio-Debug.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='../src/Debug.cxx' object='../src/SoDaRadio-Debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SoDaRadio_CPPFLAGS) $(CPPFLAGS) $(SoDaRadio_CXXFLAGS) $(CXXFLAGS) -c -o ../src/SoDaRadio-Debug.obj `if test -f '../src/Debug.cxx'; then $(CYGPATH_W) '../src/Debug.cxx'; else $(CYGPATH_W) '$(srcdir)/../src/Debug.cxx'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../src/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ../src/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ../src/$(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


SoDaRadio_GUI.cxx : SoDaRadio_GUI.cpp adjust_GUI.sh
	/bin/bash ./adjust_GUI.sh 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
