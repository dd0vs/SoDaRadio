SoDa -- A Software Defined Radio for the Ettus Research USRP

SoDaRadio is a multi-mode VHF/UHF/Microwave radio transciever
that runs on Linux.   It has been tested on several Ettus
USRP models including the N200/WBX, N210/WBX, N210/SBX,
and the B210. 

PREREQUISITES

---- 
SoDaRadio is built on the Ettus libuhd library, the FFTW library,
ALSA linux sound support, and the WXWidgets toolset.


Boost version 1.33 or later -- current builds are against boost 1.55
wxWidgets -- current build is against version 2.8
libuhd -- builds against version 003.008.001
fftw3 -- builds against version 3.3.0
libasound

There may be information on building SoDaRadio for your
particular system.  Take a look at the SoDaRadio wiki at
https://sourceforge.net/p/sodaradio/wiki/Building%20SoDa%20Radio/

Version 3.6

* Addition of arduino sketches for hardware to do TR and bandswitching.
* Added "serverargs" command line switch to gui -- argument is passed through to the SoDaServer program.
* Added "audio" switch to gui -- select the audio device for ALSA.
* Added hardware schematic and layout files (eagle) for a B2xx TR switch module
* Added hardware schematic and layout files (eagle) for a serial controlled TR and bandswitch that talks to the N200 through the GPS serial port.
* Fixed audio gain problem where the original (up to 3.5) slider control would go from silent to ear-splitting in the first 1/4 of the range.
* Added B200 and N200 TR switch control modules -- called by USRPCtrl
* Added -intN and -fracN (force integer-N or fractional-N synthesis in the front-end) to the SoDaServer command line switches.
* Changed tuning scheme in USRPCtrl to better avoid reference multiple spurs.
* Cleaned up some of the sloppier code in USRPCtrl.
* Started refactoring the front-end tuner code... not in use yet.
* Fixed some problems in USRPCtrl that would likely crash on USRPs that have no front-end local oscillators (LFRX/LFTX/BASICRX/BASICTX). This code is as yet untested on such modules....  


Version 3.5


    Extensive work to implement B200 TR control via J400.
    
    This code also contains the new (initial) TR control for the N200 series,
    where TR commands and band switching information can be sent
    through the GPS serial port to an arduino sketch that wiggles
    external relays for PTT, and other uses.
    
    WBX gpio TR switching is supported as well, and will be active
    on any WBX unit.
    
    The code MAY have trouble with N200 widgets that have installed
    a GPS.  It should not, however.  Please report any problems.
    
    The B200 and B210 TR control requires a special FPGA binary image.
    Contact radiogeek381@gmail.com for a pointer to the binary image.




Version 3.4

Fixed a bug in the way the GUI started up.  Original code used
fork/execv which confused GTK and wxWidgets and other components.
Switched to the "official" wxExecute scheme.

Fixed a bug in the build process where configure did not find the
boost libraries on Ubuntu 14.x systems. 

Version 3.3

Fixed a problem with the antenna selection.  TX/RX can only 
be used for the RX stream if there is no extant tx_streamer. 
See the USRPusers list Thu Oct 23 20:32:53 EDT 2014

Now the antenna choice in the band configuration dialog actually
works. 


Version 3.2

Fixed a problem with startup failing because of a thread
safety issue in wx.  

Added FM modulation, courtesy of changes submitted by 
Aaron Yankey Antwi.  

Minor changes to ensure build compatibility with wx widgets
version 3.x <and> version 2.8...  

Modified (improved, I hope) behavior from waterfall plots
and periodogram plots.  MB2 click on the plot window to bring
up the settings dialog.  You can now change the speed of the
waterfall update, and average over 1 to 40 or so spectrum samples.

Added markers to waterfall plot showing passband of RX chain. (more or less). 

Added the Debug base class to improve debug trace reporting. 

Worked on problem with waterfall going "out of range" as the tuning
changed. 

Added "Track Frequency" button for the waterfall/periodogram

Note that using WX version 3.0 fixes the problem with saving logs
or the config file to a directory that starts with '.'. 

Tested on B210, N200/WBX, Ubuntu, wx2.8.12 and wx3.0.1


---------------

Version 3.1

fixed an unitialized variable that caused intermittent
failure with units that were not B200 or B210.  URSPCtl
would throw an exception complaining about the unavailability
of a second transmit channel. 

Note that there is STILL a problem with any of the File->Save...
dialog boxes under Fedora... working on this.


---------------

Version 3.0

See the blog entry for the B210 10GHz transverter. 

Major changes to USRP server and GUI to support a minimal cost
10GHz rig using the B210 and an external mixer. 

Other changes for debugging (added Debug class and debugMsg). 
Fixed a load configuration bug.

--------------

Version 2.2

Minor updates to fix problems with unitialized data in 
the USRPCtrl object. 

Also fixed thread scheduling warning -- the program now works
for users that don't have RTPRIO privs. 

Thanks to an alert user for these reports. 

Note that some UBUNTU users have found that they must set
the UBUNTU_MENUPROXY to something in order to get pulldowns
to display.  UBUNTU is getting a little annoying. 
I do this (Ubuntu 12.04.4 LTS) with 
export UBUNTU_MENUPROXY=libappmenu.so
Others running Ubuntu 14.04 do this:
export UBUNTU_MENUPROXY=0

--------------

Version 2.1

This package builds two programs: 

SoDaServer -- a multithreaded program that implements a software
defined multimode VHF/UHF transciever.  

SoDaRadio -- a GUI that offers a user interface to the controls
for SoDaServer

There are several improvements over versions 1.1 and 1.2. 
Chief among these is a "band select" scheme that allows the
user to define band segments, and transverter settings. 

Before running this version, you should remove the file ~/.SoDaRadio/SoDa.soda_cfg as it is no longer compatible with version 2.0.  I really ought to fix that.


See the INSTALL file for instructions on configuring, building 
and installing SoDa


----

INSTALL Quick Start  (X.x is the version that you just downloaded, 
e.g. soda-X.x.tar.gz might be soda-2.2.tar.gz...)

# unpack soda-X.x.tar.gz 
tar xzvf soda-X.x.tar.gz
cd soda-X.x
mkdir build
cd build
../configure
make
make install

----

HOWTO 

To start the radio, connect your Ettus USRP N2xx to 
the host computer. (I'm assuming that your USRP has a
WBX module.)  Connect an antenna to the TX/RX port.


Then execute SoDaRadio

(If you haven't installed SoDaRadio, but have built it, 
you can start SoDaRadio from the build directory like this: 

gui/SoDaRadio --server=src/SoDaRadio 

)

It should come up tuned to something like 162.55 or nearby. 

Poke buttons.  Try things.  Don't hit the "TX" button unless
you have something connected and the necessary license to operate
in that band. 

---- 

PROBLEMS?

If you have problems building, post a note in the forum 
at https://sourceforge.net/p/sodaradio/discussion/general/

If you find a bug, post a ticket at 
https://sourceforge.net/p/sodaradio/tickets/

If it works, post a note in the discussin forum.  

73 -- es gl. 

